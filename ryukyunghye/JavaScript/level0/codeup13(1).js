// 13. 종합(1)

// [78] 정수(1~100) 1개를 입력받아 1부터 그 수까지 짝수의 합을 구해보자.
const num78 = prompt("정수를 입력하세요");
let sum78 = 0;
for (let i = 2; i < parseInt(num78); i += 2) {
  sum78 += i;
}
console.log(sum78);

// [79] 'q'가 입력될 때까지 입력한 문자를 계속 출력하는 프로그램을 작성해보자.
const char79 = prompt("영문자를 입력하세요").split(" ");
let i = 0;
for (let i = 0; ; i++) {
  if (char79[i] == "q") break;
  console.log(char79[i]);
}

/* [80] 언제까지 더해야 할까?
1, 2, 3, ... 을 계속 더해 나갈 때, 그 합이 입력한 정수(0~100)보다 같거나 작을 때까지 계속 더하느 프로그램을 작성해보자.
즉, 1부터 n까지 정수를 계속 더한다고 할 때, 어디까지 더해야 입력한 수보다 같거나 커지는 지 알아보고자 하는 문제이다.*/
const num80 = prompt("정수를 입력하세요");
let total = 0;
for (let i = 0; i <= Number(num80); i++) {
  total += i;
  if (total >= Number(num80)) {
    console.log(i);
    break;
  }
}

/* [81] 주사위를 2개 던지면?
1부터 n까지, 1부터 m까지 숫자가 적히 서로 다른 주사위 2개를 던졌을 때 나올 수 있는 모든 경우를 출력해보자.
입력) 주사위 2개의 면의 개수 n, m이 공백을 두고 입력된다.(10이하의 자연수)
출력) 나올 수 있는 주사위의 숫자를 한 세트씩 줄을 바꿔 모두 출력한다. 첫 번째 수는 n, 두 번째 수는 m으로 고정해 출력하도록 한다.*/
const num81 = prompt("정수를 2번 입력하세요").split(" ");
for (let n = 1; n <= Number(num81[0]); n++) {
  for (let m = 1; m <= Number(num81[1]); m++) {
    console.log(n, m);
  }
}

/* [82] 16진수 구구단
16진수(0~9, A~F)를 배운 영gi일이는 16진수끼리 곱하는 16진수 구구단에 대해서 궁금해졌다.
A~F 중 하나가 입력될 때 1부터 F까지 곱한 16진수 구구단의 내용을 출력해보자.(단, A~F까지만 입력된다.) */

/* [83] 3 6 9 게임의 왕이 되자
3 6 9 게임을 하던 영일이는 3 6 9 게임에서 잦은 실수로 계속해서 벌칙을 받게 되었다. 3 6 9 게임의 왕이 되기 위한 마스터 프로그램을 작성해보자.
입력) 10보다 작은 정수 1개가 입력된다.
출력) 1부터 그 수까지 순서대로 공백을 두고 수를 출력하는데 3 또는 6 또는 9인 경우 그 수 대신 영문 대문자 X를 출력한다. */
const num83 = prompt("10보다 작은 정수 1개를 입력하세요");
for (let i = 1; i <= Number(num83); i++) {
  if (i % 3 === 0) {
    console.log("X");
  } else {
    console.log(i);
  }
}

/* [84] 빛 섞어 색 만들기
빨강(red), 초록(green), 파랑(blue) 빛을 섞어 여러 가지 빛의 색을 만들어 내려고 한다. 
빨강(r), 초록(g), 파랑(b) 각각의 빛의 개수가 주어질 때, 
(빛의 강약에 따라 0 ~ n-1 까지 n가지의 빛 색깔을 만들 수 있다.) 
주어진 rgb 빛들을 다르게 섞어 만들 수 있는 모든 경우의 조합(r g b)과 총 가짓 수를 계산해보자.
입력) 빨녹파(r,g,b) 각 빛의 강약에 따른 가짓수(0~128)가 공백을 사이에 두고 입력된다.
    ex) 3 3 3은 각 색깔 빛에 대해서 그 강약에 따라 0~2까지 3가지의 색이 있음을 의미한다.
    ex) 2 2 2
출력) 만들 수 있는 rgb 색의 정보를 오름차순으로 줄을 바궈 모두 출력하고 마지막에 그 개수를 출력한다.
    ex) 0 0 0, 0 0 1, 0 1 0, 0 1 1, 1 0 0, 1 0 1, 1 1 0 , 1 1 1, 8 */
const num84 = prompt("rgb를 입력하세요").split(" ");
for (let r = 0; r <= Number(num84[0]); r++) {
  for (let g = 0; g <= Number(num84[1]); g++) {
    for (let b = 0; b <= Number(num84[2]); b++) {
      console.log(r, g, b);
    }
  }
}

/* [85] 소리 파일 저장용량 계산하기
1초 동안 마이크로 소리강약을 체크하는 수를 h (헤르쯔, Hz 는 1초에 몇 번? 체크하는가를 의미한다.)
한 번 체크한 결과를 저장하는 비트 b (2비트를 사용하면 0 또는 1 두 가지, 16비트를 사용하면 65536가지..)
좌우 등 소리를 저장할 트랙 개수인 채널 c (모노는 1개, 스테레오는 2개의 트랙으로 저장함을 의미한다.)
녹음할 시간 s가 주어질 때, 필요한 저장 용량을 계산하는 프로그램을 작성해보자.
이렇게 녹음하는 방식을  PCM 방법이라고 하는데 압축하지 않은 순수한 소리 데이터파일은 대표적으로 .wav가 있다.
입력) h,b, c, s가 공백을 두고 입력된다. h는 48,000이하, b는 32이하(단, 8의 배수), c는 5이하, s는 6,000이하
출력) 필요한 저장 공간을 MB 단위로 바꾸어 출력한다.
단, 소수점 둘째 자리에서 반올림해 첫째 자리까지 출력하고 MB를 공백을 두고 출력한다. */
const num85 = prompt("hbcs를 입력하세요").split(" ");
const result =
  Number(num85[0]) * Number(num85[1]) * Number(num85[2]) * Number(num85[3]);
const MB = result / (8 * 1024 ** 2);
console.log(`${MB.toFixed(1)} MB`);
